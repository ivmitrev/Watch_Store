@page "/Cart"
@using WatchStore.Services
@using WatchStore.Components
@inject ICartItemService _iCartItemService
<h3>Shopping Cart</h3>

@if(cartItems == null)
{
    <LoadingIcon />
}
else
{
    
    <div style="display: flex; justify-content: space-around; width: 100%; height: 100vh; gap: 20px;">
        <div style="display: flex; flex-direction: column; height: 100%; width: 70%; overflow-y: auto; padding: 10px;">
            @foreach (var cartItem in cartItems)
            {
               
                <div style="display: flex; align-items: center; height: 100px; width: 100%; gap: 25px; margin-bottom: 15px; border-bottom: 1px solid #ccc;">
                    <img src="@cartItem.Image" style="max-height: 100%; max-width: 20vh; object-fit: contain;" alt="@cartItem.Name">
                    <div style="flex-grow: 1;display: flex;flex-direction: column;gap: 2px;">
                        <p style="font-size: 18px;margin: 0">@cartItem.Name</p>
                        <p style="font-size: 16px;margin: 0 ">@cartItem.Description</p>
                        <p style="font-size: 15px;margin: 0; color: #212121;">@cartItem.TotalPrice.ToString("N0", new System.Globalization.CultureInfo("bg-BG")) BGN</p>
                    </div>
                    <div style="display: flex;flex-direction: column; gap: 10px;">
                        <button onclick="@DeleteCartItem(cartItem.Id)" class="btn btn-danger">Remove</button>
                        <div style="display: flex;flex-direction: row;justify-content: center">
                            <button class="btn btn-secondary" onclick=""><img src="Images/arrow-left.svg" alt=""></button>
                            <span>@cartItem.Quantity</span>
                            <button class="btn btn-secondary" onclick=""><img src="Images/arrow-right.svg" alt=""></button>
                        </div>
                    </div>
                </div>
            }
        </div>

        <div style="display: flex; justify-content: flex-start; align-items: center; flex-direction: column; width: 30%; padding: 20px; border-left: 1px solid #ccc;">
            <p style="font-size: 20px; font-weight: bold;">Cart Total</p>
            <b>
                <p style="font-size: 24px;">Total - @cartItems.Sum(x => x.TotalPrice).ToString("N0", new System.Globalization.CultureInfo("bg-BG")) BGN</p>
            </b>
            <button class="btn btn-success">Proceed to Checkout</button>
        </div>
    </div>

}


@code 
{
    private IEnumerable<CartItemDto> cartItems;
    
    int count = 1;
    protected override async Task OnInitializedAsync()
    {
        cartItems = await _iCartItemService.GetCartItems();
    }


    protected async Task DeleteCartItem(int id)
    {
        await _iCartItemService.DeleteCartItem(id);
    }

}